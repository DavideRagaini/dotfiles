#!/bin/sh

export BROWSER="qutebrowser"
export BROWSER2="firefox"
export BROWSER_PRIVATE="firefox --private-window"
export EDITOR="nvim"
export FILE="lf"
export READER="zathura"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MANROFFOPT="-c"
export TERMINAL="alacritty"
# export VISUAL="emacsclient -c"
HOSTNAME="$(hostname)"
export HOSTNAME

export XDG_CACHE_HOME="$HOME/.cache"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

export XDG_ARCHIVE_DIR="$HOME/arc"
export XDG_BOOKS_DIR="$HOME/bks"
export XDG_DOCUMENTS_DIR="$HOME/doc"
export XDG_DOWNLOAD_DIR="$HOME/dwn"
export XDG_MUSIC_DIR="$HOME/mus"
export XDG_PICTURES_DIR="$HOME/pic"
export XDG_STORAGE_DIR="$HOME/str"
export XDG_VIDEOS_DIR="$HOME/vid"

# export _JAVA_OPTIONS="-Djava.util.prefs.userRoot=\"$XDG_CONFIG_HOME\"/java"
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
export _JAVA_OPTIONS=-Djavafx.cachedir="$XDG_CACHE_HOME"/openjfx
# export ALSA_CONFIG_PATH="$XDG_CONFIG_HOME/alsa/asoundrc"
export ANSIBLE_HOME="${XDG_CONFIG_HOME}/ansible"
export ANSIBLE_CONFIG="${XDG_CONFIG_HOME}/ansible.cfg"
export ANSIBLE_GALAXY_CACHE_DIR="${XDG_CACHE_HOME}/ansible/galaxy_cache"
export AWT_TOOLKIT="MToolkit wmname LG3D" #May have to install wmname
# export BEMENU_BACKEND='wayland'
export BEMENU_OPTS="--fb #24273a --ff #c6d0f5 --nb #24273a --nf #c6d0f5 --tb #24273a --hb #24273a --tf #e78284 --hf #e78284 --af #c6d0f5 --ab #24273a --bdr #ffffff --cf #e78284 --scf #e78284 --scb #24273a --fn \"${DMENU_FN:-IosevkaTermSlab Nerd Font Propo} ${DMENU_ST:-bold} ${DMENU_FS:-12}\" --no-overlap --wrap --scrollbar autohide --vim-esc-exits --border 1 --border-radius 5 --width-factor 0.90 --fork --counter always --auto-select --ifne --single-instance --no-spacing -P 'Â»' -p ' ~~~~~~ Select ~~~~~~ ' --hp 10 --monitor '-1'"
export CALIBRE_USE_DARK_PALETTE=1
export CALIBRE_USE_SYSTEM_THEME=1
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export CM_HISTLENGTH="12"
export CUDA_CACHE_PATH="$XDG_CONFIG_HOME/nv"
# export DIGESTIF_HOME="$XDG_DATA_HOME/digestif"
export DVDCSS_CACHE="$XDG_DATA_HOME"/dvdcss
# export ELECTRUMDIR="${XDG_DATA_HOME:-$HOME/.local/share}/electrum"
export GEM_HOME="$XDG_DATA_HOME/gem"
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
# gpg2 --homedir "$XDG_DATA_HOME"/gnupg &
export GOPATH="$XDG_DATA_HOME/go"
export GOMODCACHE="$XDG_CACHE_HOME"/go/mod
export GRIPHOME="$XDG_CONFIG_HOME/grip"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0"
# export GTK_THEME="Adwaita:dark"
export HISTFILE="$XDG_STATE_HOME"/bash/history
export INPUTRC="$XDG_CONFIG_HOME/shell/inputrc"
export IPFS_PATH="$XDG_DATA_HOME"/ipfs
export KODI_DATA="$XDG_CONFIG_HOME/kodi"
export LESSHISTFILE="-"
# export MBSYNCRC="${XDG_CONFIG_HOME:-$HOME/.config}/mbsync/config"
# export MESA_LOADER_DRIVER_OVERRIDE="i965"
# export MOZ_DBUS_REMOTE="1" # Mozilla smooth scrolling/touchpads.
# export MOZ_USE_XINPUT2="1" # Mozilla smooth scrolling/touchpads.
export MYPY_CACHE_DIR="$XDG_CACHE_HOME/mypy"
export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
# export NIX_PATH="$XDG_CONFIG_HOME/nixos-config/885/configuration.nix"
export OCTAVE_HISTFILE="$XDG_CACHE_HOME/octave-hsts"
export OCTAVE_SITE_INITFILE="$XDG_CONFIG_HOME/octave/octaverc"
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel
export PASSWORD_STORE_DIR="$HOME/.local/share/password-store"
export PYTHONUSERBASE="$HOME/.local/share/python"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
# export QT_QPA_PLATFORMTHEME="gtk2"	# Have QT use gtk2 theme.
export QT_QPA_PLATFORMTHEME="qt6ct"
# export QT_STYLE_OVERRIDE = "adwaita-dark";
# export QT_STYLE_OVERRIDE="gtk3"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export SUDO_ASKPASS="bemenu --password"
# export TASKDATA="$XDG_DATA_HOME/task"
# export TASKRC="$XDG_CONFIG_HOME/task/taskrc"
# export TERM="xterm-24bit"
export TERMINFO="$XDG_DATA_HOME/terminfo"
export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:/usr/share/terminfo"
export TEXMFHOME="$XDG_DATA_HOME/texmf"
export TEXMFVAR="$XDG_CACHE_HOME/texlive/texmf-var"
export TEXMFCONFIG="$XDG_CONFIG_HOME/texlive/texmf-config"
# export TIMEWARRIORDB="$XDG_CONFIG_HOME/timewarrior"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"
export XCOMPOSEFILE="$XDG_CONFIG_HOME"/xcompose
export XCOMPOSECACHE="$XDG_CACHE_HOME"/xcompose
export XINITRC="${XDG_CONFIG_HOME:-$HOME/.config}/x11/xinitrc"
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
export _JAVA_AWT_WM_NONREPARENTING=1 # Java doesn't understand tiling windows

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

# export DMENU_FN='IosevkaTerm Nerd Font Mono:style=bold:size=12'
# export DMENU_NB='#181321'
# export DMENU_NF='#FF92D0'
# export DMENU_SB='#4e4262'
# export DMENU_SF='#181321'

PATH="$PATH:$(du "$HOME/.local/bin/" | cut -f2 | paste -sd ':' -)"
PATH="$PATH:$XDG_CONFIG_HOME/emacs/bin/"
PATH="$PATH:$XDG_DATA_HOME/cargo/bin/"
PATH="$PATH:$XDG_DATA_HOME/go/bin/"
PATH="$PATH:$XDG_DATA_HOME/npm/bin/"
PATH="$PATH:$XDG_DATA_HOME/python/bin/"
PATH="$PATH:$XDG_DATA_HOME/gem/bin"
export PATH

export FZF_DEFAULT_OPTS="--layout=reverse \
--info=inline \
--height=100% \
--multi \
--preview-window=:hidden \
--preview 'bat  --color=always --style=numbers --paging=never --line-range :80 {}' \
--prompt='Â» ' \
--pointer='â–¶' \
--marker='âœ“' \
--bind '?:toggle-preview' \
--bind 'ctrl-space:print-query' \
--bind 'ctrl-a:select-all' \
--bind 'ctrl-y:execute-silent(echo {+} | xclip -selection clipboard -i)' \
--bind 'ctrl-r:replace-query' \
--bind 'ctrl-e:execute(vim {+})'
--bind 'ctrl-v:execute(bat {+})'"

# less/man colors
# export DICS="/usr/share/stardict/dic/"
export LESS=-R
LESS_TERMCAP_mb="$(printf '%b' '[1;31m')"; export LESS_TERMCAP_mb
LESS_TERMCAP_md="$(printf '%b' '[1;36m')"; export LESS_TERMCAP_md
LESS_TERMCAP_me="$(printf '%b' '[0m')"; export LESS_TERMCAP_me
LESS_TERMCAP_so="$(printf '%b' '[01;44;33m')";export LESS_TERMCAP_so
LESS_TERMCAP_se="$(printf '%b' '[0m')"; export LESS_TERMCAP_se
LESS_TERMCAP_us="$(printf '%b' '[1;32m')"; export LESS_TERMCAP_us
LESS_TERMCAP_ue="$(printf '%b' '[0m')"; export LESS_TERMCAP_ue

[ ! -f "${XDG_CONFIG_HOME:-$HOME/.config}/shell/shortcutrc" ] && shortcuts >/dev/null 2>&1 &
# echo "$0" | grep "bash$" >/dev/null && [ -f ~/.bashrc ] && source "$HOME/.bashrc"

if [ -f "${XDG_CONFIG_HOME:-$HOME/.config}/lf/icons" ]; then
    LF_ICONS=$(sed ~/.config/lf/icons \
                -e '/^[ \t]*#/d'       \
                -e '/^[ \t]*$/d'       \
                -e 's/[ \t]\+/=/g'     \
                -e 's/$/ /')
    LF_ICONS="${LF_ICONS//$'\n'/:}"
    export LF_ICONS
fi

highdpi() {
    export GDK_SCALE=1.25
    export GDK_DPI_SCALE=1.25
    export QT_FONT_DPI=192
    export QT_AUTO_SCREEN_SCALE_FACTOR=1
    export QT_ENABLE_HIGHDPI_SCALING=1
    # export QT_SCALE_FACTOR=1.5
}

export WM_START=0
check_startup() {
    [ "$(tty)" = "/dev/tty1" ] &&
        [ -z "$(printenv WT_START)" ] &&
        export WM_START=1 &&
        awk '{ exit ($1 > 30) }' /proc/uptime
}

wayland_exports() {
     if [ "${XDG_VTNR}" -eq 1 ] && [ -z "${WAYLAND_DISPLAY}" ]; then
        export MOZ_ENABLE_WAYLAND=1
        export MOZ_WEBRENDER=1
        export MOZ_DBUS_REMOTE=1 # For shared clipboard with Xwayland apps
        # export WLR_RENDERER_ALLOW_SOFTWARE=1
        export TERMINAL="footclient"
        # export QT_QPA_PLATFORM='wayland-egl;xcb'
        export QT_QPA_PLATFORM="wayland;xcb" # Only for Qt 5 apps
        export QT_WAYLAND_FORCE_DPI=physical
        export QT_WAYLAND_DISABLE_WINDOWDECORATION=1
        export _JAVA_AWT_WM_NONREPARENTING=1
        # export XDG_SESSION_TYPE='wayland'
        export GDK_BACKEND="wayland"
    fi
}

qwtile() {
    export XDG_CURRENT_DESKTOP="qtile"
    wayland_exports
    export TERMINAL="foot"
    dbus-run-session qtile start -b wayland
}

nvidia_wayland() {
    export WLR_NO_HARDWARE_CURSORS=1
    export WLR_RENDERER=vulkan
    # [[https://github.com/ventureoo/nvidia-tweaks?tab=readme-ov-file][GitHub - ventureoo/nvidia-tweaks: A collection of tweaks and improvements to the proprietary NVIDIA driver (Linux)]]
    export SDL_VIDEODRIVER=wayland # Can break some native games
    export _JAVA_AWT_WM_NONREPARENTING=1
    export XWAYLAND_NO_GLAMOR=1
    export __GL_THREADED_OPTIMIZATIONS=1
    export __GL_MaxFramesAllowed=1
    export __GL_YIELD="USLEEP"
    export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1

}

start_sway() {
  XDG_CURRENT_DESKTOP=sway dbus-run-session sway -V > "$HOME/.sway-log" 2>&1
}

case "$HOSTNAME" in
    tinkerboard)
        export DMENU_FN='Fantasque Sans Mono'
        export BEMENU_OPTS="--fb #24273a --ff #c6d0f5 --nb #24273a --nf #c6d0f5 --tb #24273a --hb #24273a --tf #e78284 --hf #e78284 --af #c6d0f5 --ab #24273a --bdr #ffffff --cf #e78284 --scf #e78284 --scb #24273a --fn 'Fantasque Sans Mono bold 12' --no-overlap --wrap --scrollbar autohide --width-factor 0.90 --fork --ifne --no-spacing -P 'Â»' -p ' ~~~~~~ Select ~~~~~~ ' --hp 10 --monitor '-2'"
    ;;
    void)
        XDG_RUNTIME_DIR="/run/user/$(id -u)"
        export XDG_RUNTIME_DIR
    ;;
esac

case "$HOSTNAME" in
    jane)
        export MPD_HOST="/run/user/1000/mpd/socket"
        export MPD_HOST="${XDG_RUNTIME_DIR}/mpd/socket"

        export XCURSOR_SIZE=64
        export XCURSOR_THEME=Catppuccin-Macchiato-Dark-Cursors
        export BEMENU_SCALE=2

        highdpi &&
        check_startup &&
            ! pidof -s Xorg >/dev/null 2>&1 &&
            exec start_sway
            # exec startx "$XINITRC"
            # qwtile
    ;;
    bagaro)
        check_startup &&
            wayland_exports &&
            start_sway
    ;;
    NT)
        XDG_RUNTIME_DIR="/run/user/$(id -u)"
        export XDG_RUNTIME_DIR
        export WLR_NO_HARDWARE_CURSORS=1
        {
            sleep 12
            kill -TERM "$(pgrep -u "$USER" "\bdwm$")" &
        } &
        check_startup &&
        ! pidof -s Xorg >/dev/null 2>&1 &&
        startx "$XINITRC" &&
        wayland_exports &&
        export XDG_CURRENT_DESKTOP="sway" &&
        exec sway
    ;;
    *)
        check_startup &&
        wayland_exports &&
        export XDG_CURRENT_DESKTOP="sway" &&
        exec sway
    ;;
esac

# sudo -n loadkeys ~/.config/shell/ttymaps.kmap 2>/dev/null
